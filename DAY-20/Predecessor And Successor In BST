#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/
int prede(BinaryTreeNode<int>* root,int key){
        if(!root) return -1;
        int cur=-1;
        while(root){
            if(root->data<key){
                cur=root->data;
                root=root->right;
            }
            else{
                root=root->left;
            }
        }
        return cur;
    }
int succe(BinaryTreeNode<int>* root,int key){
        if(!root) return -1;
        int cur=-1;
        while(root){
            if(root->data<=key){
                root=root->right;
            }
            else{
                cur=root->data;
                root=root->left;
            }
        }
        return cur;
    }
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.
    int pre=prede(root,key);
    int suc=succe(root,key);
    return {pre,suc};
}
