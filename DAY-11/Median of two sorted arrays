double median(vector<int>& nums1, vector<int>& nums2) {
	// Write your code here.
	if(nums1.size()>nums2.size()) return median(nums2,nums1);
        int n=nums1.size();
        int m=nums2.size();
        int l=0;
        int h=n;
        int medianpos=(nums1.size()+nums2.size()+1)/2;
        while(l<=h){
            int cut1=(l+h)>>1;
            int cut2=medianpos-cut1;

            int l1=(cut1==0)?INT_MIN:nums1[cut1-1];
            int l2=(cut2==0)?INT_MIN:nums2[cut2-1];
            int r1=(cut1==n)?INT_MAX:nums1[cut1];
            int r2=(cut2==m)?INT_MAX:nums2[cut2];

            if(l1<=r2 && l2<=r1){
                if((n+m)%2!=0){
                    return max(l1,l2);
                }
                else{
                    return (max(l1,l2)+min(r1,r2))/2.0;
                }
            }
            else if(l1>r2){
                h=cut1-1;
            }
            else{
                l=cut1+1;
            }
        }
        return 0.0;
}
