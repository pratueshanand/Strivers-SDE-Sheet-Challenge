class Solution {
public:
    int length(ListNode* head){
        int len=0;
        while(head){
            head=head->next;
            len++;
        }
        return len;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || k==1) return head;
        int l=length(head);
        ListNode* dummy= new ListNode();
        dummy->next=head;
        ListNode* cur;
        ListNode* nes;
        ListNode* pre=dummy;
        while(l>=k){
            cur=pre->next;
            nes=cur->next;
            for(int i=1;i<k;i++){
                cur->next=nes->next;
                nes->next=pre->next;
                pre->next=nes;
                nes=cur->next;
            }
            pre=cur;
            l-=k;
        }
        return dummy->next;
    }
};
