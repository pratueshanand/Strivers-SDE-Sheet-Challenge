class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    void helper(int i, vector<int> &ans, vector<int> adj[], vector<int> &vis){
        vis[i]=1;
        ans.push_back(i);
        for(auto it: adj[i]){
            if(!vis[it]){
                helper(it,ans,adj,vis);
            }
        }
        return;
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int> ans;
        vector<int> vis(V,0);
        helper(0,ans,adj,vis);
        return ans;
    }
};
