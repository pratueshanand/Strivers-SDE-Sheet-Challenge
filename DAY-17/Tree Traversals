#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    vector<vector<int>> ans(3);
    if(!root) return ans;
    stack<pair<BinaryTreeNode<int> *,int>> st;
    st.push({root,1});
    while(!st.empty()){
        auto it=st.top();
        st.pop();
        BinaryTreeNode<int> * temp=it.first;
        int x=it.second;
        if(x==1){
            ans[1].push_back(temp->data);
            it.second++;
            st.push(it);

            if(temp->left){
                st.push({temp->left,1});
            }
        }
        else if(x==2){
            ans[0].push_back(temp->data);
            it.second++;
            st.push(it);

            if(temp->right){
                st.push({temp->right,1});
            }
        }
        else{
            ans[2].push_back(temp->data);
        }
    }
    return ans;

}
