#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
        vector<int> ans;
        if(!root) return ans;
        queue<BinaryTreeNode<int>*> q;
        q.push(root);
        int cnt=0;
        while(!q.empty()){
            int size=q.size();
            vector<int> res;
            for(int i=0;i<size;i++){
                BinaryTreeNode<int>* temp=q.front();
                q.pop();
                res.push_back(temp->data);
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            if(cnt%2!=0) reverse(res.begin(),res.end());
            for(auto r: res)
                ans.push_back(r);
            cnt++;
        }
        return ans;
}
