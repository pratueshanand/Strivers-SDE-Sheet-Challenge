#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int>* helper(TreeNode<int> *root, int x, int y){
    if(!root || root->data==x || root->data==y){
        return root;
    }
    TreeNode<int> *lh=helper(root->left,x,y);
    TreeNode<int> *rh=helper(root->right,x,y);
    if(!lh) return rh;
    else if(!rh) return lh;
    else return root;
}
int lowestCommonAncestor(TreeNode<int> *root, int x, int y)
{
	//    Write your code here
    if(!root) return 0;
    TreeNode<int> *temp=helper(root,x,y);
    return temp->data;

}
